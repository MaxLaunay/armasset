{
	"$schema" : "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
	"contentVersion" : "1.0.0.0",
	"parameters" : {
		"environmentName" : {
			"type" : "String"
		},
		"userName" : {
			"type" : "String"
		},
		"password" : {
			"type" : "SecureString"
		},
		"location" : {
			"type" : "String"
		},
		"DSCToken" : {
			"type" : "String"
		},
		"hardwareSize" : {
			"type" : "String",
			"defaultValue" : "Large"
		},
		"vnetAddressSpace" : {
			"type" : "String",
			"defaultValue" : "10.0.0.0"
		},
		"DSCModuleURI" : {
			"type" : "String"
		},
		"DSCSCript" : {
			"type" : "String"
		},
		"newSubnetsName" : {
			"type" : "String",
			"defaultValue" : "subnet-01"
		},
		"databaseName" : {
			"type" : "String"
		},
		"ADdomainName" : {
			"type" : "String"
		},
		"SQLSetupConfigurationFileUri" : {
			"type" : "String"
		},
		"sourceImageName" : {
			"type" : "String"
		},
		"SQLDatabaseFileUri" : {
			"type" : "String"
		},
		"staticADIpAddress" : {
			"type" : "String"
		},
		"SQLServerISOUri" : {
			"type" : "String"
		},
		"webSiteHostingPlanSKU" : {
			"type" : "string",
			"allowedValues" : [
				"Free",
				"Shared",
				"Basic",
				"Standard"
			],
			"defaultValue" : "Free"
		},
		"webSiteHostingPlanWorkerSize" : {
			"type" : "string",
			"allowedValues" : [
				"0",
				"1",
				"2"
			],
			"defaultValue" : "0"
		}
	},
	"variables" : {

		"newStorageAccountName" : "[ concat(parameters('environmentName'),'str') ]",
		"newVirtualNetworkName" : "[ concat(parameters('environmentName'),'-vnet') ]",
		"newDomainName" : "[ concat(parameters('environmentName'),'-domain') ]",
		"webSiteName" : "[ concat(parameters('environmentName'),'-web') ]",
		"webSiteHostingPlanName" : "[ concat(parameters('environmentName'),'-appplan') ]",

		"computer" : {
			"activeDirectory" : {
				"hostname" : "[ concat(parameters('environmentName'),'-ad') ]",
				"DSCConfiguration" : "CreateADPDC"
			},
			"SQLServer" : {
				"hostname" : "[ concat(parameters('environmentName'),'-sql') ]",
				"DSCConfiguration" : "SQLServer"
			}
		},
		"network" : {
			"virtualnetworkAddressSpace" : "[ concat(parameters('vnetAddressSpace'),'/24') ]",
			"subnetAdressSpace" : "[ concat(parameters('vnetAddressSpace'),'/28') ]"
		},

		"sqlServerName" : "[concat(variables('newDomainName'), '.cloudapp.net')]",
		"sqlServerAdminLogin" : "sa",
		/* évoluer */
		"sqlServerAdminPassword" : "[parameters('password')]",

		"packageUri" : "https://sourcedatafiles.blob.core.windows.net/web/package.zip"

	},
	"resources" : [{
			"type" : "Microsoft.ClassicStorage/storageAccounts",
			"name" : "[variables('newStorageAccountName')]",
			"apiVersion" : "2014-06-01",
			"location" : "[parameters('location')]",
			"properties" : {
				"accountType" : "Standard-GRS"
			}
		}, {
			"type" : "Microsoft.ClassicCompute/domainNames",
			"name" : "[variables('newDomainName')]",
			"apiVersion" : "2014-06-01",
			"location" : "[parameters('location')]",
			"properties" : {}
		}, {
			"type" : "Microsoft.ClassicNetwork/virtualNetworks",
			"name" : "[variables('newVirtualNetworkName')]",
			"apiVersion" : "2014-06-01",
			"location" : "[parameters('location')]",
			"properties" : {
				"addressSpace" : {
					"addressPrefixes" : [
						"[variables('network').virtualnetworkAddressSpace]"
					]
				},
				"dhcpOptions" : {
					"dnsServers" : [
						"[parameters('staticADIpAddress')]",
						"8.8.8.8",
						"8.8.4.4"
					]
				},
				"subnets" : [{
						"name" : "[parameters('newSubnetsName')]",
						"addressPrefix" : "[variables('network').subnetAdressSpace]"
					}
				]
			}
		}, {
			"type" : "Microsoft.ClassicCompute/virtualMachines",
			"name" : "[variables('computer').activeDirectory.hostname]",
			"apiVersion" : "2014-06-01",
			"location" : "[parameters('location')]",
			"properties" : {
				"domainName" : {
					"id" : "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', variables('newDomainName'))]"
				},
				"networkProfile" : {
					"virtualNetwork" : {
						"id" : "[concat(resourceGroup().id, '/providers/Microsoft.ClassicNetwork/virtualNetworks/', variables('newVirtualNetworkName'))]",
						"staticIpAddress" : "[parameters('staticADIpAddress')]",
						"subnetNames" : [
							"[parameters('newSubnetsName')]"
						]
					},
					"inputEndpoints" : [{
							"enableDirectServerReturn" : "False",
							"endpointName" : "Remote Desktop",
							"privatePort" : 3389,
							"publicPort" : 33389,
							"protocol" : "tcp"
						}, {
							"enableDirectServerReturn" : "False",
							"endpointName" : "Powershell",
							"privatePort" : 5986,
							"publicPort" : 35986,
							"protocol" : "tcp"
						}
					]
				},
				"hardwareProfile" : {
					"size" : "[parameters('hardwareSize')]",
					"platformGuestAgent" : "true"
				},
				"operatingSystemProfile" : {
					"computerName" : "[variables('computer').activeDirectory.hostname]",
					"adminUserName" : "[parameters('userName')]",
					"adminPassword" : "[parameters('password')]",
					"windowsOperatingSystemProfile" : {
						"winRMListeners" : [{
								"protocol" : "Https"
							}
						]
					}
				},
				"storageProfile" : {
					"operatingSystemDisk" : {
						"diskName" : "[concat(variables('newDomainName'), '-', variables('computer').activeDirectory.hostname, '-osdisk')]",
						"vhdUri" : "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('newStorageAccountName'))).endpoints[0], 'vhds/', variables('newDomainName'), '-', variables('computer').activeDirectory.hostname, '-osdisk.vhd')]",
						"caching" : "ReadWrite",
						"sourceImageName" : "[parameters('sourceImageName')]"
					}

				},
				"extensions" : [{
						"extension" : "BGInfo",
						"publisher" : "Microsoft.Compute",
						"version" : "1.*",
						"state" : "Enable",
						"referenceName" : "BGInfo"
					}, {
						"extension" : "DSC",
						"publisher" : "Microsoft.Powershell",
						"referenceName" : "DSC",
						"version" : "1.*",
						"parameters" : {
							"public" : {
								"SasToken" : "[parameters('DSCToken')]",
								"ModulesUrl" : "[parameters('DSCModuleURI')]",
								"ConfigurationFunction" : "[concat(parameters('DSCSCript'), '\\' , variables('computer').activeDirectory.DSCConfiguration)]",
								"Properties" : [{
										"TypeName" : "System.Security.SecureString",
										"Name" : "password",
										"Value" : "[parameters('password')]"
									}, {
										"TypeName" : "System.String",
										"Name" : "ADdomainName",
										"Value" : "[parameters('ADdomainName')]"
									}
								],
								"ProtocolVersion" : {
									"Major" : 2,
									"Minor" : 0,
									"Build" : 0,
									"Revision" : 0,
									"MajorRevision" : 0,
									"MinorRevision" : 0
								}
							}
						}
					}
				]
			},
			"dependsOn" : [
				"[concat('Microsoft.ClassicCompute/domainNames/', variables('newDomainName'))]",
				"[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('newVirtualNetworkName'))]",
				"[concat('Microsoft.ClassicStorage/storageAccounts/', variables('newStorageAccountName'))]"
			]
		}, {
			"type" : "Microsoft.ClassicCompute/virtualMachines",
			"name" : "[variables('computer').SQLServer.hostname]",
			"apiVersion" : "2014-06-01",
			"location" : "[parameters('location')]",
			"properties" : {
				"domainName" : {
					"id" : "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', variables('newDomainName'))]"
				},
				"networkProfile" : {
					"virtualNetwork" : {
						"id" : "[concat(resourceGroup().id, '/providers/Microsoft.ClassicNetwork/virtualNetworks/', variables('newVirtualNetworkName'))]",
						"subnetNames" : [
							"[parameters('newSubnetsName')]"
						]
					},
					"inputEndpoints" : [{
							"enableDirectServerReturn" : "False",
							"endpointName" : "Remote Desktop",
							"privatePort" : 3389,
							"publicPort" : 43389,
							"protocol" : "tcp"
						}, {
							"enableDirectServerReturn" : "False",
							"endpointName" : "Powershell",
							"privatePort" : 5986,
							"publicPort" : 45986,
							"protocol" : "tcp"
						}, {
							"enableDirectServerReturn" : "False",
							"endpointName" : "SQL",
							"privatePort" : 1433,
							"publicPort" : 1433,
							"protocol" : "tcp"
						}
					]
				},
				"hardwareProfile" : {
					"size" : "[parameters('hardwareSize')]",
					"platformGuestAgent" : "true"
				},
				"operatingSystemProfile" : {
					"computerName" : "[variables('computer').SQLServer.hostname]",
					"adminUserName" : "[parameters('userName')]",
					"adminPassword" : "[parameters('password')]",
					"windowsOperatingSystemProfile" : {
						"winRMListeners" : [{
								"protocol" : "Https"
							}
						]
					}
				},
				"storageProfile" : {
					"operatingSystemDisk" : {
						"diskName" : "[concat(variables('newDomainName'), '-', variables('computer').SQLServer.hostname, '-osdisk')]",
						"vhdUri" : "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('newStorageAccountName'))).endpoints[0], 'vhds/', variables('newDomainName'), '-', variables('computer').SQLServer.hostname, '-osdisk.vhd')]",
						"caching" : "ReadWrite",
						"sourceImageName" : "[parameters('sourceImageName')]"
					}
				},
				"extensions" : [{
						"extension" : "BGInfo",
						"publisher" : "Microsoft.Compute",
						"version" : "1.*",
						"state" : "Enable",
						"referenceName" : "BGInfo"
					}, {
						"extension" : "DSC",
						"publisher" : "Microsoft.Powershell",
						//"version" : "1.*",
						"version" : "1.7",
						"state" : "Enable",
						"referenceName" : "DSC",
						"parameters" : {
							"public" : {
								"SasToken" : "[parameters('DSCToken')]",
								"ModulesUrl" : "[parameters('DSCModuleURI')]",
								"ConfigurationFunction" : "[concat(parameters('DSCSCript'), '\\' , variables('computer').SQLServer.DSCConfiguration)]",
								"Properties" : [{
										"TypeName" : "System.String",
										"Name" : "username",
										"Value" : "[parameters('userName')]"
									}, {
										"TypeName" : "System.Security.SecureString",
										"Name" : "password",
										"Value" : "[parameters('password')]"
									}, {
										"TypeName" : "System.String",
										"Name" : "databaseName",
										"Value" : "[parameters('databaseName')]",
									}, {
										"TypeName" : "System.String",
										"Name" : "ADdomainName",
										"Value" : "[parameters('ADdomainName')]",
									}, {
										"TypeName" : "System.String",
										"Name" : "SQLSetupConfigurationFileUri",
										"Value" : "[parameters('SQLSetupConfigurationFileUri')]",
									}, {
										"TypeName" : "System.String",
										"Name" : "SQLServerISOUri",
										"Value" : "[parameters('SQLServerISOUri')]",
									}, {
										"TypeName" : "System.String",
										"Name" : "SQLDatabaseFileUri",
										"Value" : "[parameters('SQLDatabaseFileUri')]",
									}
								],
								"ProtocolVersion" : {
									"Major" : 2,
									"Minor" : 0,
									"Build" : 0,
									"Revision" : 0,
									"MajorRevision" : 0,
									"MinorRevision" : 0
								}
							}
						}
					}
				]
			},
			"dependsOn" : [
				"[concat('Microsoft.ClassicCompute/domainNames/', variables('newDomainName'))]",
				"[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('newVirtualNetworkName'))]",
				"[concat('Microsoft.ClassicStorage/storageAccounts/', variables('newStorageAccountName'))]",
				"[concat('Microsoft.ClassicCompute/virtualMachines/', variables('computer').activeDirectory.hostname)]"
			]
		},

		/* WEB SITE */
		{
			"apiVersion" : "2014-06-01",
			"name" : "[variables('webSiteName')]",
			"type" : "Microsoft.Web/sites",
			"location" : "[parameters('location')]",
			"tags" : {
				"[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('webSiteHostingPlanName'))]" : "Resource",
				"displayName" : "WebSite"
			},
			"dependsOn" : [
				"[concat('Microsoft.Web/serverfarms/', variables('webSiteHostingPlanName'))]",
				"[concat('Microsoft.ClassicCompute/virtualMachines/', variables('computer').SQLServer.hostname)]"

			],
			"properties" : {
				"name" : "[variables('webSiteName')]",
				"serverFarm" : "[variables('webSiteHostingPlanName')]"
			},
			"resources" : [{
					"apiVersion" : "2014-04-01",
					"name" : "MSDeploy",
					"type" : "extensions",
					"dependsOn" : [
						"[concat('Microsoft.Web/Sites/', variables('webSiteName'))]"
					],
					"properties" : {
						"packageUri" : "[variables('packageUri')]",
						"dbType" : "None",
						"connectionString" : "",
						"setParameters" : {
							"IIS Web Application Name" : "[variables('webSiteName')]"
						}
					}
				}, {
					"apiVersion" : "2014-04-01-preview",
					"type" : "config",
					"name" : "web",
					"dependsOn" : [
						"[concat('Microsoft.Web/Sites/', variables('webSiteName'))]"
					],
					"properties" : {
						"connectionStrings" : [{
								"ConnectionString" : "[concat('Data Source=tcp:', variables('sqlServerName'), ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', variables('sqlServerAdminLogin'),  ';Password=', variables('sqlServerAdminPassword'), ';')]",
								"Name" : "DefaultConnection",
								"Type" : 2
							}
						]
					}
				}
			]
		}, {
			"apiVersion" : "2014-06-01",
			"name" : "[variables('webSiteHostingPlanName')]",
			"type" : "Microsoft.Web/serverfarms",
			"location" : "[parameters('location')]",
			"tags" : {
				"displayName" : "WebSiteHostingPlan"
			},
			"properties" : {
				"name" : "[variables('webSiteHostingPlanName')]",
				"sku" : "[parameters('webSiteHostingPlanSKU')]",
				"workerSize" : "[parameters('webSiteHostingPlanWorkerSize')]",
				"numberOfWorkers" : 1
			}
		}

	]
	/*,
	"outputs" : {
	"key1" : {
	"value" : "value1",
	"type" : "string"
	}
	}*/
}
